// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-11-18 20:55:14.408854 -0500 EST m=+0.023564574

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://socialwags.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.socialwags.com/support",
            "email": "support@socialwags.com"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/owner": {
            "get": {
                "description": "Get a specific owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owner"
                ],
                "summary": "Get a specific owner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Owner ID",
                        "name": "owner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "put": {
                "description": "Create a new owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owner"
                ],
                "summary": "Create a new owner account",
                "parameters": [
                    {
                        "description": "Create owner request body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateOwnerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete a specific owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owner"
                ],
                "summary": "Delete a specific owner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Owner ID",
                        "name": "owner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "patch": {
                "description": "Update a specific owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owner"
                ],
                "summary": "Update a specific owner",
                "parameters": [
                    {
                        "description": "Update user body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateOwnerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/pet": {
            "get": {
                "description": "Get a specific pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Get a specific pet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pet ID",
                        "name": "pet_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "put": {
                "description": "Create a new pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Create a new pet",
                "parameters": [
                    {
                        "description": "Create pet request body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreatePetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete a specific pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Delete a specific pet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pet ID",
                        "name": "pet_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "patch": {
                "description": "Update pet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pet"
                ],
                "summary": "Update pet",
                "parameters": [
                    {
                        "description": "update pet request body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdatePetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/post": {
            "get": {
                "description": "Get a specific post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Get a specific post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "put": {
                "description": "Create a new post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Create a new post",
                "parameters": [
                    {
                        "description": "Create post request body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete a specific post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Delete a specific post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "patch": {
                "description": "Update a specific post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Update a specific post",
                "parameters": [
                    {
                        "description": "Update post body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        }
    },
    "definitions": {
        "api.CreateOwnerRequest": {
            "type": "object",
            "required": [
                "email_address",
                "first_name",
                "last_name",
                "password",
                "zip_code"
            ],
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "picture_data": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "integer"
                }
            }
        },
        "api.CreatePetRequest": {
            "type": "object",
            "required": [
                "birth_date",
                "name",
                "owner_id"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "picture_URL": {
                    "type": "string"
                }
            }
        },
        "api.CreatePostRequest": {
            "type": "object",
            "required": [
                "body",
                "owner_id",
                "post_type",
                "title"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "post_type": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.UpdateOwnerRequest": {
            "type": "object",
            "required": [
                "email_address",
                "first_name",
                "last_name",
                "owner_ID",
                "password",
                "zip_code"
            ],
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "owner_ID": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "picture_data": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "integer"
                }
            }
        },
        "api.UpdatePetRequest": {
            "type": "object",
            "required": [
                "birth_date",
                "name",
                "owner_id",
                "pet_ID"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "pet_ID": {
                    "type": "integer"
                },
                "picture_URL": {
                    "type": "string"
                }
            }
        },
        "api.UpdatePostRequest": {
            "type": "object",
            "required": [
                "body",
                "post_ID",
                "title"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "post_ID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SocialWags API",
	Description: "API documentation for the socialwags platform",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
